# SonarQube project configuration
sonar.projectKey=lakeside-mutual
sonar.projectName=Lakeside Mutual
sonar.projectVersion=1.0.0

# Sources
sonar.sources=src
sonar.exclusions=**/*.test.ts,**/*.test.tsx,**/*.spec.ts,**/*.spec.tsx,**/*.spec.js,**/node_modules/**,**/*.test.java

# Tests
sonar.tests=src
sonar.test.inclusions=**/*.test.ts,**/*.test.tsx,**/*.spec.ts,**/*.spec.tsx,**/*.spec.js,**/*Test.java

# Backend Java configuration
sonar.java.source=17
sonar.java.binaries=target/classes
sonar.java.libraries=target/dependency/*.jar
sonar.java.test.binaries=target/test-classes
sonar.java.test.libraries=target/dependency/*.jar

# Frontend TypeScript configuration
sonar.typescript.lcov.reportPaths=coverage/lcov.info
sonar.testExecutionReportPaths=coverage/test-reporter.xml

# Code Coverage
sonar.coverage.exclusions=**/*.test.ts,**/*.test.tsx,**/*.spec.ts,**/*.spec.tsx,**/*Test.java
sonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

# Encoding
sonar.sourceEncoding=UTF-8

# DDD-Specific Rules
# Note: Custom rules would normally be defined in a custom SonarQube plugin
sonar.issue.ignore.multicriteria=e1,e2,e3

# 1. Enable stricter cyclomatic complexity for domain logic
sonar.issue.ignore.multicriteria.e1.ruleKey=java:S1541
sonar.issue.ignore.multicriteria.e1.resourceKey=**/domain/**/*.java

# 2. Allow longer method names in domain layer (for ubiquitous language)
sonar.issue.ignore.multicriteria.e2.ruleKey=java:S100
sonar.issue.ignore.multicriteria.e2.resourceKey=**/domain/**/*.java

# 3. Enforce immutability for value objects
sonar.issue.ignore.multicriteria.e3.ruleKey=java:S2384
sonar.issue.ignore.multicriteria.e3.resourceKey=**/domain/model/**/*.java
